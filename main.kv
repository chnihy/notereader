#: import r random
#### MainLayout 
#### holds everything
<MainLayout>:
    orientation: 'vertical'
	canvas:
		Color:
			rgba: .75,.75,1,.5
		Rectangle:
			size: self.size
			pos:self.pos


#### Modules. 
#### holds Title and Panels
<Module>:
	orientation:'vertical'


#### Panels
#### holds name of input and input entry
<Panel>:
	orientation:'horizontal'
	canvas:
		Color:
			rgba: 0,0,0,.5
		Rectangle:
			size: self.size
			pos:self.pos

#### Text and Fonts
<AppTitle@Label>:
    font_size: 65
    size_hint: 1, None
    height: 100
    color: 1,1,1,1
    canvas.before:
		Color:
			rgba: 0,0,0,.75
		Rectangle:
			size: self.size
			pos:self.pos


<ModuleTitle@Label>:
	font_size: 30
	size_hint: 1, None
	height: 100
	color: 1,1,1,1
	canvas.before:
		Color:
			rgba: ([r.random() for x in range(3)] + [.5])
		Rectangle:
			size: self.size
			pos:self.pos

<PanelTitle@Label>:
	font_size: 25
    color: 1,1,1,1
    canvas.before:
		Color:
			rgba: 0,0,0,.5
		Rectangle:
			size: self.size
			pos:self.pos

<TextInput>:
	multiline: False
	cursor_blink: True
	font_size: 30
	halign: 'center'


#### Drop Down Menus
<Spinner>:
    font_size: 20
<RootList>:
	text: 'C'
	values: self.rootlist
<KeySigList>:
    text: "C major"
    values: self.key_signatures
<RhythmList>:
	text: "quarter"
	values: self.rhythmlist
<ScaleList>:
	text: "major"
	values: self.scalelist
<ClefList@Spinner>:
    text: "Treble"
    values: "Treble","Bass","Grand Staff"



#### Declaring empty classes
<Time>:
<Rhythm>:
<Scale>:
<Exercises>:




#### ---------- Actual App starts here ---------- ####
<MainLayout>:
	# ObjectProperties
    
    
    #### ------ Title Bar ------####
    AppTitle:
        text: "Note Reader App"


    #### ------ Top Row ------ ####
    GridLayout:
        cols: 3
        rows: 1
        padding: 150, 20, 150, 0
        spacing: 20

        # Time Module
        Time:
            id: time

            ModuleTitle:
                text: "Time"

            # Tempo
            Panel:
                id: tempo
                orientation:'horizontal'
                PanelTitle:
                    text:'Tempo'
                TextInput:
                    id: tempo_selection
                    text: "120"
                    hint_text: "120"
                    input_filter: 'float'
                    on_text: time.set_tempo(self.text)

            
            # Time Signature
            Panel:
                id: time_sig
                orientation:'horizontal'
                
                PanelTitle:
                    text:'Time Sig'
                
                Panel:
                    orientation:'vertical'
                    TextInput:
                        id: beats_selection
                        hint_text: "4"	
                        text: "4"
                        input_filter: 'int'
                        on_text: time.set_beats(self.text)
                    Spinner:
                        id: beattype_selection
                        text: "4"	
                        values: "4","8"
                        on_text: time.set_beattype(self.text)
        
        
        #### Rhythm Module
        Rhythm:
            id: rhythm
            
            ModuleTitle:
                text:'Rhythm'
            
            # Rhythm Panel  
            Panel:
                PanelTitle:
                    text:'Rhythm'
                RhythmList:
                    id: rhythm_selection
                    on_text: rhythm.set_rhythm(self.text)

        # Scale Module
        ScaleSelect:
            id: scalemod
            ModuleTitle:
                text:'Scale'

            # Clef
            Panel:
                orientation: 'horizontal'
                PanelTitle:
                    text: "Clef"
                ClefList:
                    on_text: scalemod.set_clef(self.text)

            
            # Key
            Panel:
                orientation:'horizontal'
                PanelTitle:
                    text:'Key'
                KeySigList:
                    id: key_signature_selection
                    on_text: scalemod.set_key_signature(self.text)

            
            # Root
            Panel:
                orientation:'horizontal'
                PanelTitle:
                    text:'Root'
                RootList:
                    text: "C"
                    id: scaleroot_selection
                    on_text: scalemod.set_root(self.text)
                    on_text: scalemod.set_flats_or_sharps(self.text)
            
            # ScaleType
            Panel:
                orientation:'horizontal'
                PanelTitle:
                    text:'Scale'
                ScaleList:
                    text: "major"
                    id: scaletype_selection
                    on_text: scalemod.set_scaletype(self.text)
            

    #### ------ Bottom Row ------ ####
    GridLayout:
        cols: 2
        rows: 1
        spacing: 20
        padding: 150, 20, 150, 50
        
        
        #### Exercises Module
        Exercises:
            id: exercises
            ModuleTitle:
                text:'Exercises'
                
            # Sample Size
            # TODO this needs to be dynamic - reacting to scale selection
            Panel:
                PanelTitle:
                    text: "Sample Size"
                TextInput:
                    id: sample_size
                    input_filter: "int"
                    text: "7"
                    on_text: exercises.set_sample_size(self.text)

            # Number of Exercises
            # TODO this needs to be dynamic - reacting to scale selection
            Panel:
                PanelTitle:
                    text: "# of Ex's"
                TextInput:
                    id: num_of_exs
                    input_filter: "int"
                    text: "10"
                    on_text: exercises.set_num_of_exs(self.text)
    
            # Title Entry
            Panel:
                PanelTitle:
                    text:'Custom Title'
                TextInput:
                    id: title_entry
                    text: "Default Title"
                    on_text: exercises.set_title(self.text)
				

		# Run Button
		Button:
			text: "Run"
			font_size: 40
			on_release: root.run()